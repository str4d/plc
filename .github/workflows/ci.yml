name: CI checks

on:
  pull_request:
  push:
    branches: main

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: cargo test --all-features
      - name: Verify working directory is clean
        run: git diff --exit-code

  bitrot:
    name: Bitrot
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo check --all-targets --all-features

  clippy:
    name: Clippy (stable)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Clippy check
        uses: actions-rs/clippy-check@v1
        with:
          name: Clippy (stable)
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -D warnings

  codecov:
    name: Code coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined

    steps:
      - uses: actions/checkout@v4
      - name: Generate coverage report
        run: >
          cargo tarpaulin
          --engine llvm
          --release
          --all-features
          --timeout 180
          --out xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt --all -- --check
